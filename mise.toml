[settings]
experimental = true # Required to use lockfile.
lockfile = true     # DO NOT FORGET TO `touch mise.lock` if mise.lock does not exist!


[tools]
#--- Test & Lint
# Static checker for GitHub Actions workflow files.
actionlint = 'latest'
# Run your GitHub Actions locally.
act = 'latest'
# Bash Automated Testing System.
bats = 'latest'

#--- Release
# A highly customizable Changelog Generator that follows Conventional Commit specifications.
git-cliff = 'latest'
# GitHub's official command line tool.
gh = 'latest'


[tasks.'changelog:skip-commit']
description = 'Add commit hash to .cliffignore to exclude from CHANGELOG'
usage = 'arg "<commit>" help="Git revision (e.g. HEAD or a1b2c4d)"'
run = 'git rev-parse --verify "${usage_commit}" >> .cliffignore'

[tasks.test]
alias = 'default'
description = 'Run all linters and tests'
depends = ['lint:*', 'test:*']

[tasks.'lint:workflows']
description = 'Lint GitHub Action workflows'
run = 'actionlint'

[tasks.'test:workflows']
description = 'Run workflow integration tests'
depends = ['test:workflows:release:smoke']

[tasks.'test:workflows:release:smoke']
description = 'Run Release workflow smoke tests in test repo'
run = 'bats test/smoke.bats'

[tasks.'test-repo:check']
description = 'Show test repo status'
run = 'test/test_helper/check_repo'

[tasks.'test-repo:setup']
description = 'Create or clone test repo for manual testing'
run = 'test/test_helper/setup_repo'

[tasks.'test-repo:cleanup']
description = 'Remove test repo PRs/branches/tags/releases on GitHub'
run = 'test/test_helper/cleanup_repo'

[tasks.'test-repo:workflows:release']
description = 'Run Release workflow manually in test repo'
usage = '''
arg "<event>" {
    choices "push" "pull_request"
}
flag "--branch <branch>" help="Target branch (default: current branch)"
flag "--action <action>" help="PR action" {
    choices "opened" "edited" "closed" "reopened"
}
flag "--pr-branch <pr-branch>" help="PR source branch (default: release-pr)"
flag "--pr-number <pr-number>" help="PR number"
flag "--pr-title <pr-title>" help="PR title"
'''
env.TEST_REPO = '{{ exec(command="test/test_helper/test_repo") }}'
dir = '.test-repo'
run = '''
event_json=$(mktemp --tmpdir event.XXXXXXXXXX.json) && trap 'rm -f "$event_json"' EXIT
../test/test_helper/generate_event $usage_event \
    ${usage_branch:+--branch $usage_branch} \
    ${usage_action:+--action $usage_action} \
    ${usage_pr_branch:+--pr-branch $usage_pr_branch} \
    ${usage_pr_number:+--pr-number $usage_pr_number} \
    ${usage_pr_title:+--pr-title $usage_pr_title} \
    >"$event_json"
act "$usage_event" --workflows .github/workflows/release.yml --eventpath "$event_json"
'''
